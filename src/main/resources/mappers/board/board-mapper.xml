<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.multi.ukids.board.model.mapper.BoardMapper">

	<resultMap type="Board" id="boardListResultMap">
		<id property="boardNo" 				column="boardNo"/>
		<result property="memberNo" 		column="memberNo"/>
		<result property="id" 				column="id"/>
		<result property="title" 			column="title"/>
		<result property="content" 			column="content"/>
		<result property="good" 			column="good"/>
		<result property="type" 			column="type"/>
		<result property="originalFileName" column="originalFileName"/>
		<result property="renamedFileName" 	column="renamedFileName"/>
		<result property="readcount" 		column="readcount"/>
		<result property="status" 			column="STATUS"/>
		<result property="createDate" 		column="createDate"/>
		<result property="modifyDate" 		column="modifyDate"/>
	</resultMap>

	<resultMap type="B_Reply" id="boardReplyResultMap">
		<id 	property="replyNo"		column="bReplyNo"/>
		<result property="boardNo" 		column="boardNo"/>
		<result property="memberNo" 	column="memberNo"/>
		<result property="id" 			column="id"/>
		<result property="content" 		column="content"/>
		<result property="status" 		column="STATUS"/>
		<result property="createDate" 	column="createDate"/>
		<result property="modifyDate" 	column="modifyDate"/>
	</resultMap>
	
	<resultMap type="Good" id="boardGoodResult">
		<id property="goodNo" 		column="goodNo"/>
		<result property="boardNo" 	column="boardNo"/>
		<result property="memberNo" column="memberNo"/>
	</resultMap>
	
	<resultMap type="Board" id="boardDetailResultMap" extends="boardListResultMap">
		<collection property="replies" javaType="arrayList" columnPrefix="R_" resultMap="boardReplyResultMap"/>
	</resultMap>
	
	<!--  전체 게시글 수 조회(자유게시판) -->
	<select id="selectBoardCount" resultType="int" parameterType="map">
		SELECT
			COUNT(*)
		FROM BOARD B
		LEFT OUTER JOIN MEMBER M ON B.memberNo = M.memberNo
		WHERE B.STATUS = 'Y'
		<if test="search != null">
			AND ( B.title LIKE '%${search}%' OR B.content LIKE '%${search}%')
		</if>	
		<if test="type != null">
			AND B.type LIKE '%${type}%'
		</if>
	</select>
	
	<!-- 게시판 전체 리스트 조회 -->
	<select id="selectBoardList" resultMap="boardListResultMap" parameterType="map">
		SELECT 
			DISTINCT B.boardNo, M1.id, B.memberNo, B.title, B.content, B.good, B.type, B.originalFileName, 
			B.renamedFileName, B.readcount, B.STATUS, B.createDate, B.modifyDate
		FROM BOARD B
		LEFT OUTER JOIN MEMBER M1 ON B.memberNo = M1.memberNo
		LEFT OUTER JOIN B_REPLY R ON R.boardNo = B.boardNo
		LEFT OUTER JOIN MEMBER M2 ON R.memberNo = M2.memberNo
		WHERE B.STATUS = 'Y'
		<if test="search != null">
			AND ( B.title LIKE '%${search}%' OR B.content LIKE '%${search}%')
		</if>
		<if test="type != null">
			AND B.type LIKE '%${type}%'
		</if>
		
		ORDER BY B.boardNo DESC LIMIT ${limit} OFFSET ${offset}
	</select>
	
	<select id="selectBoardByNo" parameterType="int" resultMap="boardDetailResultMap">
		SELECT  
			B.boardNo, B.memberNo, B.title, M.id, B.readcount, B.type, B.originalFileName, B.renamedFileName, 
			B.content, B.createDate, B.modifyDate,
			R.bReplyNo AS R_bReplyNo, 
		    R.boardNo AS R_boardNo,
		    R.content  AS R_content, 
		    M1.id  AS R_id, 
		    R.createDate  AS R_createDate, 
		    R.modifyDate  AS R_modifyDate
		FROM BOARD B
		JOIN MEMBER M ON(B.memberNo = M.memberNo)
		LEFT OUTER JOIN B_REPLY R ON (B.boardNo = R.boardNo)
		LEFT OUTER JOIN MEMBER M1 ON (R.memberNo = M1.memberNo)
		WHERE B.STATUS = 'Y' AND B.boardNo = #{boardNo}
	</select>
	
	<insert id="insertBoard" parameterType="board">
		INSERT INTO BOARD(
			boardNo, memberNo, title, content, originalFileName, renamedFileName,
			readcount, STATUS, createDate, modifyDate, TYPE, good
		) VALUES (
			0, #{memberNo}, #{title}, #{content}, 
			#{originalFileName}, #{renamedFileName},
			DEFAULT, DEFAULT, DEFAULT, DEFAULT, #{type}, 0
		)
	</insert>
	
	<insert id="insertReply" parameterType="B_Reply">
		INSERT INTO B_REPLY(
			bReplyNo, boardNo, memberNo, content, 
			STATUS, createDate, modifyDate
		) VALUES(
			0, #{boardNo}, #{memberNo}, #{content}, 
			DEFAULT, DEFAULT, DEFAULT
		)
	</insert>
	
	<update id="updateReadCount" parameterType="map">
		UPDATE BOARD SET readcount=#{readcount} WHERE boardNo=#{boardNo}
	</update>
	
	<update id="updateBoard" parameterType="board">
		UPDATE BOARD
		SET
			title=#{title},
			content=#{content},
			<if test="originalFileName != null">
				originalFileName=#{originalFileName},
			</if>
			<if test="renamedFileName != null">
				renamedFileName=#{renamedFileName},
			</if>
			modifyDate = CURRENT_TIMESTAMP
		WHERE
			boardNo=#{boardNo}
	</update>
	
	<select id="selectGood" resultType="int" parameterType="Good">
		SELECT   
			COUNT(goodNo)
		FROM GOOD
		WHERE boardNo = #{boardNo} AND memberNo = #{memberNo}
	</select>
	
	<insert id="insertGood" parameterType="Good">
		INSERT INTO GOOD (
			goodNo, boardNo, memberNo
		) VALUES (
			0, #{boardNo}, #{memberNo}
		)
	</insert>
	
	<update id="updateGoodPlus" parameterType="int">
		UPDATE BOARD SET good = good + 1 WHERE boardNo = #{no};
	</update>
	
	<update id="updateGoodMinus" parameterType="int">
		UPDATE BOARD SET good = good - 1 WHERE boardNo = #{no}
	</update>
	
	<delete id="deleteGood" parameterType="Good">
		DELETE FROM GOOD WHERE boardNo = #{boardNo} AND memberNo = #{memberNo}
	</delete>
	
	<update id="deleteBoard" parameterType="int">
		UPDATE BOARD SET STATUS='N' WHERE boardNo=#{boardNo}
	</update>
	
	<delete id="deleteReply" parameterType="int">
		DELETE FROM B_REPLY WHERE bReplyNo=#{no}
	</delete>
</mapper>