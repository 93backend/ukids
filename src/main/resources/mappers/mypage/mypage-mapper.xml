<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.multi.ukids.mypage.model.mapper.MypageMapper">


	<!-- ===============================mypage2=============================== -->
	
	<!-- 어린이집 -->
	<select id="selectNAdmissionList" resultType="NAdmission" parameterType="map">
		SELECT
			A.nuNo, N.crname, A.no, A.hopeDate, A.enrollDate, A.status, A.memberNo 
		FROM NURSERY N 
		LEFT OUTER JOIN N_ADMISSION A ON (N.no = A.nuNo)
		LEFT OUTER JOIN MEMBER M ON (A.memberNo = M.memberNo)
		where A.memberNo = #{memberNo}
		ORDER BY A.nuNo DESC LIMIT ${limit} OFFSET ${offset}	
	</select>
	
	<select id="selectNAdmissionCount" resultType="int" parameterType="map">
		SELECT
			COUNT(*)
		FROM NURSERY N
		LEFT OUTER JOIN N_ADMISSION A ON (N.no = A.nuNo)
		LEFT OUTER JOIN MEMBER M ON (A.memberNo = M.memberNo)
		WHERE 1=1
		AND A.memberNo = #{memberNo}
	</select> 
	
	<delete id="deleteNAdmission" parameterType="int">
		DELETE FROM N_ADMISSION WHERE no = #{no}
	</delete>
	
	<!-- 유치원 -->
 	<select id="selectKAdmissionList" resultType="KAdmission" parameterType="map">
		SELECT
			K.kinNo, K.kindername, A.no, A.hopeDate, A.enrollDate, A.status, A.memberNo 
		FROM KINDER K
		LEFT OUTER JOIN K_ADMISSION A ON (K.kinNo = A.kinNo)
		LEFT OUTER JOIN MEMBER M ON (A.memberNo = M.memberNo)
		where A.memberNo = #{memberNo}
		ORDER BY kinNo DESC LIMIT ${limit} OFFSET ${offset}	
	</select>
	
	<select id="selectKAdmissionCount" resultType="int" parameterType="map">
		SELECT
			COUNT(*)
		FROM KINDER K
		LEFT OUTER JOIN K_ADMISSION A ON (K.kinNo = A.kinNo)
		LEFT OUTER JOIN MEMBER M ON (A.memberNo = M.memberNo)
		WHERE 1=1
		AND A.memberNo = #{memberNo}
	</select> 
	
	<delete id="deleteKAdmission" parameterType="KAdmission">
		DELETE FROM K_ADMISSION WHERE no = #{no}
	</delete>
	

	<!-- ===============================mypage3=============================== -->
	
	<!-- 어린이집 -->
	<select id="selectNurseryWishList" resultType="Wish" parameterType="map">
		SELECT
			W.nuNo AS 'knNo', N.crname AS 'knName', W.no,W.memberNo, N.craddr AS 'knAddr'   
		FROM NURSERY N
		LEFT OUTER JOIN N_WISH W ON (N.no = W.nuNo)
		LEFT OUTER JOIN MEMBER M ON (W.memberNo = M.memberNo)
		where W.memberNo = #{memberNo}
		ORDER BY W.nuNo DESC LIMIT ${limit} OFFSET ${offset}	
	</select> 
	
	<select id="selectNurseryWishCount" resultType="int" parameterType="map">
		SELECT
			COUNT(W.no)
		FROM NURSERY N
		LEFT OUTER JOIN N_WISH W ON (N.no = W.nuNo)
		LEFT OUTER JOIN MEMBER M ON (W.memberNo = M.memberNo)
		WHERE 1=1
		AND W.memberNo = #{memberNo}
	</select> 
	
	<delete id="deleteNurseryWish" parameterType="Wish">
		DELETE FROM N_WISH WHERE no = #{no}
	</delete> 
	
	<resultMap type="Cart" id="CartResultMap">
		<id 	property="no"			column="NO"/>
		<result property="toyNo" 		column="TOYNO"/>
		<result property="memberNo" 	column="MEMBERNO"/>
		<result property="startDate" 	column="STARTDATE"/>
		<result property="endDate" 		column="ENDDATE"/>
						
	</resultMap>
	
	<!-- 유치원 -->
	
	<select id="selectKinderWishList" resultType="Wish" parameterType="map">
		SELECT
			K.kinNo AS 'knNo', K.kindername AS 'knName', W.no, W.memberNo, K.addr AS 'knAddr'    
		FROM KINDER K
		LEFT OUTER JOIN K_WISH W ON (K.kinNo = W.kinNo)
		LEFT OUTER JOIN MEMBER M ON (W.memberNo = M.memberNo)
		where W.memberNo = #{memberNo}
		ORDER BY W.kinNo DESC LIMIT ${limit} OFFSET ${offset}	
	</select> 
	
	<select id="selectKinderWishCount" resultType="int" parameterType="map">
		SELECT
			COUNT(W.no)
		FROM KINDER K
		LEFT OUTER JOIN K_WISH W ON (K.kinNo = W.kinNo)
		LEFT OUTER JOIN MEMBER M ON (W.memberNo = M.memberNo)
		WHERE 1=1
		AND W.memberNo = #{memberNo}
	</select> 
	
	<delete id="deleteKinderWish" parameterType="Wish">
		DELETE FROM K_WISH WHERE no = #{no}
	</delete>
	
	
	
	<!-- ===============================mypage4=============================== -->
	
	<!-- 어린이집 -->
	<select id="selectNurseryName" resultType="string" parameterType="int">
		SELECT 
			crname
		FROM NURSERY
		WHERE no = #{no}
	</select>
	
	<select id="selectNurseryClaimList" resultType="Claim" parameterType="map">
		SELECT 
			C.no, C.nuNo AS 'knNo', C.memberNo, M.id, C.title, C.content, 
			C.originalFileName, C.renamedFileName, C.readCount, 
			C.confirm, C.status, C.createDate, C.modifyDate
		FROM NURSERY N
		LEFT OUTER JOIN N_CLAIM C ON (N.no = C.nuNo)
		LEFT OUTER JOIN MEMBER M ON (C.memberNo = M.memberNo)
		WHERE C.STATUS = 'Y' AND C.memberNo = #{memberNo}
		ORDER BY C.no DESC LIMIT ${limit} OFFSET ${offset}
	</select>
	
	<select id="selectNurseryClaimCount" resultType="int" parameterType="map">
		SELECT 
			COUNT(C.no)
		FROM NURSERY N
		LEFT OUTER JOIN N_CLAIM C ON (N.no = C.nuNo)
		LEFT OUTER JOIN MEMBER M ON (C.memberNo = M.memberNo)
		WHERE C.STATUS = 'Y' AND C.memberNo = #{memberNo}
	</select>
	
	<select id="selectNurseryClaimByNo" resultType="Claim" parameterType="int">
		SELECT 
			C.no, C.nuNo AS 'knNo', C.memberNo, M.id, C.title, C.content, 
			C.originalFileName, C.renamedFileName, C.readCount, 
			C.confirm, C.status, C.createDate, C.modifyDate
		FROM NURSERY N
		LEFT OUTER JOIN N_CLAIM C ON (N.no = C.nuNo)
		LEFT OUTER JOIN MEMBER M ON (C.memberNo = M.memberNo)
		WHERE C.STATUS = 'Y' AND C.no = #{no}
	</select>
	
	<insert id="insertNurseryClaim" parameterType="Claim">
		INSERT INTO N_CLAIM (
			no, nuNo, memberNo, title, content, 
			originalFileName, renamedFileName, readCount, 
			confirm, status, createDate, modifyDate
		) VALUES (
			0, #{knNo}, #{memberNo}, #{title}, #{content}, 
			#{originalFileName}, #{renamedFileName}, DEFAULT,
			DEFAULT, DEFAULT, DEFAULT, DEFAULT
		)
	</insert>
	
	<update id="updateReadCountNursery" parameterType="Claim">
		UPDATE N_CLAIM SET readCount = #{readCount} WHERE no = #{no}
	</update>
	
	<update id="updateNurseryClaim" parameterType="Claim">
		UPDATE N_CLAIM SET
			title = #{title}, 
			content = #{content},
			<if test="originalFileName != null">
				originalFileName = #{originalFileName},
			</if>
			<if test="renamedFileName != null">
				renamedFileName = #{renamedFileName},
			</if>
			modifyDate = CURRENT_TIMESTAMP
		WHERE no = #{no}
	</update>
	
	<update id="deleteNurseryClaim" parameterType="int">
		UPDATE N_CLAIM SET status = 'N' WHERE no = #{no}
	</update>
	
	<!-- 유치원 -->
	<select id="selectKinderName" resultType="string" parameterType="int">
		SELECT 
			kindername
		FROM KINDER
		WHERE kinNo = #{no}
	</select>
	
	<select id="selectKinderClaimList" resultType="Claim" parameterType="map">
		SELECT 
			C.no, C.kinNo AS 'knNo', C.memberNo, M.id, C.title, C.content, 
			C.originalFileName, C.renamedFileName, C.readCount, 
			C.confirm, C.status, C.createDate, C.modifyDate
		FROM KINDER K
		LEFT OUTER JOIN K_CLAIM C ON (K.kinNo = C.kinNo)
		LEFT OUTER JOIN MEMBER M ON (C.memberNo = M.memberNo)
		WHERE C.STATUS = 'Y' AND C.memberNo = #{memberNo}
		ORDER BY C.no DESC LIMIT ${limit} OFFSET ${offset}
	</select>
	
	<select id="selectKinderClaimCount" resultType="int" parameterType="map">
		SELECT 
			COUNT(C.no)
		FROM KINDER K
		LEFT OUTER JOIN K_CLAIM C ON (K.kinNo = C.kinNo)
		LEFT OUTER JOIN MEMBER M ON (C.memberNo = M.memberNo)
		WHERE C.STATUS = 'Y' AND C.memberNo = #{memberNo}
	</select>
	
	<select id="selectKinderClaimByNo" resultType="Claim" parameterType="int">
		SELECT 
			C.no, C.kinNo AS 'knNo', C.memberNo, M.id, C.title, C.content, 
			C.originalFileName, C.renamedFileName, C.readCount, 
			C.confirm, C.status, C.createDate, C.modifyDate
		FROM KINDER K
		LEFT OUTER JOIN K_CLAIM C ON (K.kinNo = C.kinNo)
		LEFT OUTER JOIN MEMBER M ON (C.memberNo = M.memberNo)
		WHERE C.STATUS = 'Y' AND C.no = #{no}
	</select>
	
	<insert id="insertKinderClaim" parameterType="Claim">
		INSERT INTO K_CLAIM (
			no, kinNo, memberNo, title, content, 
			originalFileName, renamedFileName, readCount, 
			confirm, status, createDate, modifyDate
		) VALUES (
			0, #{knNo}, #{memberNo}, #{title}, #{content}, 
			#{originalFileName}, #{renamedFileName}, DEFAULT,
			DEFAULT, DEFAULT, DEFAULT, DEFAULT
		)
	</insert>
	
	<update id="updateKinderClaim" parameterType="Claim">
		UPDATE K_CLAIM SET
			title = #{title}, 
			content = #{content},
			<if test="originalFileName != null">
				originalFileName = #{originalFileName},
			</if>
			<if test="renamedFileName != null">
				renamedFileName = #{renamedFileName},
			</if>
			modifyDate = CURRENT_TIMESTAMP
		WHERE no = #{no}
	</update>
	
	<update id="deleteKinderClaim" parameterType="int">
		UPDATE K_CLAIM SET status = 'N' WHERE no = #{no}
	</update>
	
	<!-- ===============================mypage5=============================== -->
	
	<select id="selectBoardList" resultType="Board" parameterType="map">
		SELECT
			B.BOARDNO, B.MEMBERNO, B.TITLE, B.CONTENT, B.TYPE, B.STATUS, B.CREATEDATE
		FROM BOARD B
		LEFT OUTER JOIN MEMBER M ON(B.MEMBERNO = M.MEMBERNO)
		WHERE B.MEMBERNO = #{memberNo}
		ORDER BY B.BOARDNO DESC LIMIT ${limit} OFFSET ${offset}
	</select>
	
	<select id="selectBoardCount" parameterType="map" resultType="int">
		SELECT
			COUNT(DISTINCT B.BOARDNO)
		FROM BOARD B
		LEFT OUTER JOIN MEMBER M ON(B.MEMBERNO = M.MEMBERNO)
		WHERE B.STATUS = 'Y'
		AND B.MEMBERNO = #{memberNo}
	</select>
	
	<select id="selectBoardByNo" parameterType="int" resultType="Rental">
		SELECT  
			B.BOARDNO, B.MEMBERNO, B.TITLE, B.CONTENT, B.TYPE, B.STATUS, B.CREATEDATE
		FROM BOARD B
		LEFT OUTER JOIN MEMBER M ON(B.MEMBERNO = M.MEMBERNO)
		WHERE B.STATUS = 'Y'
		AND B.BOARDNO = #{boardNo}
	</select>
	
	<update id="updateReadCount" parameterType="map">
		UPDATE BOARD SET READCOUNT=#{readCount} WHERE BOARDNO=#{boardNo}
	</update>
	
	<update id="updateBoard" parameterType="Board">
		UPDATE BOARD
		SET
			TITLE=#{title},
			CONTENT=#{content},
			<if test="originalFileName != null">
				ORIGINALFILENAME=#{originalFileName},
			</if>
			<if test="renamedFileName != null">
				RENAMEDFILENAME=#{renamedFileName},
			</if>
			MODIFYDATE = CURRENT_TIMESTAMP
		WHERE
			BOARDNO=#{boardNo}
	</update>
	
	<update id="deleteBoard" parameterType="int">
		UPDATE BOARD SET STATUS='N' WHERE BNO=#{bNo}
	</update>
	
	
	<!-- ===============================mypage6=============================== -->
	
	<select id="selectRentalList" resultType="Rental" parameterType="map">
		SELECT
			P.PAYNO, P.TOYNO, P.MEMBERNO, T.TOYNM1, T.TOYIMG, T.TOYPAY, T.TOYTYPE, 
			P.PRICE, P.STATUS, P.STARTDATE, P.ENDDATE
		FROM TOY T
		LEFT OUTER JOIN PAY P ON (T.TOYNO = P.TOYNO)
		LEFT OUTER JOIN MEMBER M ON (P.MEMBERNO = M.MEMBERNO)
		WHERE P.MEMBERNO = #{memberNo}
		ORDER BY P.TOYNO DESC LIMIT ${limit} OFFSET ${offset}	
	</select>
	
	<select id="selectRentalCount" parameterType="map" resultType="int">
		SELECT
			COUNT(P.PAYNO)
		FROM PAY P
		LEFT OUTER JOIN TOY T ON (P.TOYNO = T.TOYNO)
		LEFT OUTER JOIN MEMBER M ON (P.MEMBERNO = M.MEMBERNO)
		WHERE 1=1
		AND P.MEMBERNO = #{memberNo}
	</select>
	
	<select id="selectRentalByNo" parameterType="int" resultType="Rental">
		SELECT
			P.PAYNO, P.TOYNO, P.MEMBERNO, T.TOYNM1, T.TOYIMG, T.TOYPAY, T.TOYTYPE, 
			P.PRICE, P.STATUS, P.STARTDATE, P.ENDDATE
		FROM TOY T
		LEFT OUTER JOIN PAY P ON (T.TOYNO = P.TOYNO)
		LEFT OUTER JOIN MEMBER M ON (P.MEMBERNO = M.MEMBERNO)
		WHERE P.PAYNO = #{payNo}
	</select>
	
	<update id="updateToyType" parameterType="Rental">
		UPDATE TOY
		SET
			TOYTYPE=#{toyType},
		WHERE
			TOYNO = #{toyNo}
	</update>
	
	<update id="updateRental" parameterType="Rental">
		UPDATE PAY
		SET
			STATUS=#{status},
		WHERE
			PAYNO = #{payNo}
	</update>
	
	<delete id="deletePay" parameterType="Rental">
		DELETE FROM PAY WHERE PAYNO = #{payNo}
	</delete>
	
	
	<!-- ===============================mypage7=============================== -->
	
	<select id="selectCartList" resultType="Cart" parameterType="map">
		SELECT
			C.NO, T.TOYNM1, T.TOYIMG, T.TOYPAY, C.TOYNO, C.MEMBERNO, C.STARTDATE, C.ENDDATE
		FROM TOY T
		LEFT OUTER JOIN CART C ON (T.TOYNO = C.TOYNO)
		LEFT OUTER JOIN MEMBER M ON (C.MEMBERNO = M.MEMBERNO)
		WHERE C.MEMBERNO = #{memberNo}
		ORDER BY C.TOYNO DESC LIMIT ${limit} OFFSET ${offset}	
	</select>
	
	<select id="selectCartCount" parameterType="map" resultType="int">
		SELECT
			COUNT(C.NO)
		FROM CART C
		LEFT OUTER JOIN TOY T ON (C.TOYNO = T.TOYNO)
		LEFT OUTER JOIN MEMBER M ON (C.MEMBERNO = M.MEMBERNO)
		WHERE 1=1
		AND C.MEMBERNO = #{memberNo}
	</select>
	
	<select id="selectCartByNo" parameterType="int" resultType="Cart">
		SELECT
			C.NO, C.TOYNO, C.MEMBERNO, C.STARTDATE, C.ENDDATE, 
			T.TOYNM1, T.TOYIMG, T.TOYPAY 
		FROM CART C
		LEFT OUTER JOIN TOY T ON (C.TOYNO = T.TOYNO)
		LEFT OUTER JOIN MEMBER M ON (C.MEMBERNO = M.MEMBERNO)
		WHERE C.NO = #{no}
	</select>
	
	<insert id="insertCart" parameterType="Cart">
		INSERT INTO CART(
			TOYNO, MEMBERNO, STARTDATE, ENDDATE
		) VALUES (
		  #{toyNo}, #{memberNo}, #{startDate}, #{endDate} 
		)
	</insert>
	
	<update id="updateCart" parameterType="Cart">
		UPDATE CART
		SET
			STARTDATE=#{startDate},
			ENDDATE=#{endDate}
		WHERE
			NO = #{no}
	</update>
	
	<delete id="deleteCart" parameterType="Cart">
		DELETE FROM CART WHERE NO = #{no}
	</delete>
	
	
	
	
</mapper>